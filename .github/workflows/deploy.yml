# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: portafolio

on:
  push:
    branches: [ master ]

jobs:       
  build-image:
    runs-on: ubuntu-latest
    name: build-image
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        env:
          PORT: ${{ secrets.APP_PORT }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          USER: ${{ secrets.GIT_USER }}
        run: |
          docker login docker.pkg.github.com -u ${{ secrets.GIT_USER }} -p ${{ secrets.GITHUB_TOKEN }}
          docker push docker.pkg.github.com/${{ secrets.GIT_USER }}/portafolio/portafolio:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Deploy package to digitalocean
        uses: appleboy/ssh-action@master
        env:
          GIT_USER: ${{ secrets.GIT_USER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APP_PORT: ${{ secrets.APP_PORT }}
          EXPOSED_PORT: ${{ secrets.EXPOSED_PORT }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.USER_HOST }}
          key: ${{ secrets.KEY_HOST }}
          port: ${{ secrets.PORT_HOST }}
          envs: GIT_USER,GITHUB_TOKEN,APP_PORT,EXPOSED_PORT
          script: |
            docker login docker.pkg.github.com -u $GIT_USER -p $GITHUB_TOKEN
            docker pull docker.pkg.github.com/$GIT_USER/portafolio/portafolio:latest
            CONTAINER="$(docker ps --all --quiet --filter=name=portafolio)"
            if [ -n "$CONTAINER" ]; then
              docker stop $CONTAINER && docker rm $CONTAINER
            fi
            docker run --restart unless-stopped --name portafolio -d -p $EXPOSED_PORT:$APP_PORT
            docker.pkg.github.com/$GIT_USER/portafolio/portafolio:latest